{"version":3,"sources":["index.js"],"names":["Square","props","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","className","onClick","value","ToggleButton","Board","i","_this","this","key","highlight","squares","_this2","RANGE","Object","_home_avm_martin_Documents_Trial_Web_ReactTutorial_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","Array","keys","map","row_number","col_number","renderSquare","React","Component","Game","_this3","_home_avm_martin_Documents_Trial_Web_ReactTutorial_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_home_avm_martin_Documents_Trial_Web_ReactTutorial_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_home_avm_martin_Documents_Trial_Web_ReactTutorial_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","state","history","fill","isAscendingOrder","stepNumber","xIsNext","index","slice","current","before","position","length","calculateWinner","setState","concat","step","status","_this4","winner","moves","move","desc","getPosition","jumpTo","reverse","SIZE","handleClick","toggleHistory","lines","_lines$i","_home_avm_martin_Documents_Trial_Web_ReactTutorial_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a9d6cfc.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n/*\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n*/\n\n\n// class Square extends React.Component {\n//  render() {\n//    return (\n//      <button\n//        className=\"square\"\n//        onClick={() => this.props.onClick()}\n//      >\n//        {this.props.value}\n//      </button>\n//    );\n//  }\n// }\n\nfunction Square(props) {\n  return (\n    <button\n      className={props.className}\n      onClick={props.onClick}\n    >\n      {props.value}\n    </button>\n  );\n}\n\nfunction ToggleButton(props){\n  return (\n    <div>\n      <button onClick={props.onClick}>\n        {props.value}\n      </button>\n    </div>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        key={i}\n        className={this.props.highlight[i]===true\n          ? \"square square-highlight\"\n          : \"square\"\n        }\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    const SIZE = 3;\n    const RANGE = [...Array(SIZE).keys()];\n\n    return (\n      <div>\n        {RANGE.map((row_number) => {\n          return (\n            <div className=\"board-row\" key={row_number}>\n              {RANGE.map((col_number) => {\n                return this.renderSquare(SIZE*row_number + col_number);\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n        highlight: Array(9).fill(false),\n      }],\n      isAscendingOrder: true,\n      stepNumber: 0,\n      xIsNext: true,\n    };\n  }\n\n  getPosition(index) {\n    const SIZE = 3;\n\n    const history = this.state.history.slice();\n    const current = history[index].squares.slice();\n    const before = history[index-1].squares.slice();\n\n    for (let row_number=0; row_number<SIZE; row_number++) {\n      for (let col_number=0; col_number<SIZE; col_number++) {\n        let position = SIZE*row_number + col_number;\n        if (current[position] !== before[position]) {\n          return col_number + ',' + row_number;\n        }\n      }\n    }\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber+1);\n    const current = history[history.length-1];\n    const squares = current.squares.slice();\n    const highlight = current.highlight.slice();\n    if (calculateWinner(squares, highlight) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n        highlight: highlight,\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  jumpTo(step){\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  render() {\n    const SIZE = 3;\n\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares, current.highlight);\n\n    const moves = history.map((step, move) => {\n      const desc = move\n        ? 'Go to move #' + move + ' at ' + this.getPosition(move)\n        : 'Go to game start';\n      return (\n        <li key={move}>\n          <button\n            className={move===this.state.stepNumber ? \"button-selected\" : \"\"}\n            onClick={() => this.jumpTo(move)}\n          >\n            {desc}\n          </button>\n        </li>\n      );\n    });\n    const display_moves = this.state.isAscendingOrder===true\n      ? moves\n      : moves.reverse();\n\n    let status;\n    if (this.state.stepNumber===SIZE*SIZE && !winner) {\n      status = 'Draw';\n    } else if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            highlight={current.highlight}\n            onClick={(i) => this.handleClick(i)}\n          />\n          <br />\n          <ToggleButton\n            value={this.state.isAscendingOrder===true\n              ? \"Ascending\"\n              : \"Descending\"\n            }\n            onClick={() => this.toggleHistory()}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n\n  toggleHistory(){\n    this.setState({\n      isAscendingOrder: !this.state.isAscendingOrder,\n    });\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n\n\nfunction calculateWinner(squares, highlight) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      highlight[a] = true;\n      highlight[b] = true;\n      highlight[c] = true;\n\n      return squares[a];\n    }\n  }\n  return null;\n}\n"],"sourceRoot":""}